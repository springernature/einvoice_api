# Generated using halfpipe cli version 3.33.0
resources:
- name: git
  type: git
  source:
    branch: master
    private_key: ((halfpipe-github.private_key))
    uri: git@github.com:springernature/einvoice_api.git
  check_every: 10m
- name: artifacts
  type: gcp-resource
  source:
    bucket: ((halfpipe-artifacts.bucket))
    folder: saptech/einvoiceapi
    json_key: ((halfpipe-artifacts.private_key))
  check_every: 24h
- name: version
  type: semver
  source:
    bucket: ((halfpipe-semver.bucket))
    driver: gcs
    json_key: ((halfpipe-semver.private_key))
    key: SAPTECH-einvoice_api
- name: CF snpaas dev
  type: cf-resource
  source:
    api: ((cloudfoundry.api-snpaas))
    org: ((cloudfoundry.org-snpaas))
    password: ((cloudfoundry.password-snpaas))
    space: dev
    username: ((cloudfoundry.username-snpaas))
  check_every: 24h
resource_types:
- name: gcp-resource
  type: registry-image
  source:
    password: ((halfpipe-gcr.private_key))
    repository: eu.gcr.io/halfpipe-io/gcp-resource
    tag: stable
    username: _json_key
- name: cf-resource
  type: registry-image
  source:
    password: ((halfpipe-gcr.private_key))
    repository: eu.gcr.io/halfpipe-io/cf-resource-v2
    tag: stable
    username: _json_key
jobs:
- name: update
  serial: true
  build_log_retention:
    builds: 5
    minimum_succeeded_builds: 1
  plan:
  - in_parallel:
      steps:
      - get: git
        trigger: true
        attempts: 2
      fail_fast: true
    timeout: 1h
  - task: halfpipe update
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          password: ((halfpipe-gcr.private_key))
          repository: eu.gcr.io/halfpipe-io/halfpipe-auto-update
          tag: latest
          username: _json_key
      params:
        CONCOURSE_PASSWORD: ((concourse.password))
        CONCOURSE_TEAM: ((concourse.team))
        CONCOURSE_URL: ((concourse.url))
        CONCOURSE_USERNAME: ((concourse.username))
        HALFPIPE_DOMAIN: halfpipe.io
        HALFPIPE_PROJECT: halfpipe-io
        PIPELINE_NAME: einvoice_api
      run:
        path: update-pipeline
        dir: git
      inputs:
      - name: git
    timeout: 1h
    attempts: 2
  - put: version
    params:
      bump: minor
    timeout: 1h
    attempts: 2
- name: build
  serial: true
  build_log_retention:
    builds: 5
    minimum_succeeded_builds: 1
  plan:
  - in_parallel:
      steps:
      - get: git
        passed:
        - update
        attempts: 2
      - get: version
        passed:
        - update
        trigger: true
        timeout: 1m
        attempts: 2
      fail_fast: true
    timeout: 1h
  - task: build
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: node
          tag: 10.18.0
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
      run:
        path: /bin/sh
        args:
        - -c
        - |-
          which bash > /dev/null
          if [ $? != 0 ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:stretch-slim as an alternative"
            echo ""
            echo ""
          fi

          copyArtifact() {
            ARTIFACT=$1
            ARTIFACT_OUT_PATH=$2

            if [ -e $ARTIFACT ] ; then
              mkdir -p $ARTIFACT_OUT_PATH
              cp -r $ARTIFACT $ARTIFACT_OUT_PATH
            else
              echo "ERROR: Artifact '$ARTIFACT' not found. Try fly hijack to check the filesystem."
              exit 1
            fi
          }

          export GIT_REVISION=`cat .git/ref`
          export BUILD_VERSION=`cat ../version/version`

          ./build.sh
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi

          # Artifacts to copy from task
          copyArtifact . ../artifacts-out
        dir: git
      inputs:
      - name: git
      - name: version
      outputs:
      - name: artifacts-out
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
    timeout: 1h
    attempts: 1
  - put: artifacts
    params:
      folder: artifacts-out
      version_file: git/.git/ref
    timeout: 1h
    attempts: 2
- name: stage app in dev env
  serial: true
  build_log_retention:
    builds: 5
    minimum_succeeded_builds: 1
  ensure:
    put: cf halfpipe-cleanup
    resource: CF snpaas dev
    params:
      command: halfpipe-cleanup
      manifestPath: git/cf/manifest-dev.yml
      timeout: 1h
    timeout: 1h
    attempts: 2
  plan:
  - in_parallel:
      steps:
      - get: git
        passed:
        - build
        attempts: 2
      - get: version
        passed:
        - build
        trigger: true
        timeout: 1m
        attempts: 2
      fail_fast: true
    timeout: 1h
  - task: get artifact
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          password: ((halfpipe-gcr.private_key))
          repository: eu.gcr.io/halfpipe-io/gcp-resource
          tag: stable
          username: _json_key
      params:
        BUCKET: ((halfpipe-artifacts.bucket))
        FOLDER: saptech/einvoiceapi
        JSON_KEY: ((halfpipe-artifacts.private_key))
        VERSION_FILE: git/.git/ref
      run:
        path: /opt/resource/download
        args:
        - .
        dir: artifacts
      inputs:
      - name: git
      outputs:
      - name: artifacts
    timeout: 1h
    attempts: 2
  - put: cf halfpipe-push
    resource: CF snpaas dev
    params:
      appPath: artifacts
      buildVersionPath: version/version
      command: halfpipe-push
      gitRefPath: git/.git/ref
      manifestPath: git/cf/manifest-dev.yml
      testDomain: springernature.app
      timeout: 1h
    timeout: 1h
    attempts: 2
  - put: cf halfpipe-check
    resource: CF snpaas dev
    params:
      command: halfpipe-check
      manifestPath: git/cf/manifest-dev.yml
      timeout: 1h
    timeout: 1h
    attempts: 2
  - put: cf halfpipe-promote
    resource: CF snpaas dev
    params:
      command: halfpipe-promote
      manifestPath: git/cf/manifest-dev.yml
      testDomain: springernature.app
      timeout: 1h
    timeout: 1h
    attempts: 2

